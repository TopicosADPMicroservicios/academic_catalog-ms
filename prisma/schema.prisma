// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Nivel {
  id        String    @id @default(uuid())
  semestre  Int
  materias  Materia[]
  isActive  Boolean   @default(true)
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
}

model Carrera {
  id            String          @id @default(uuid())
  codigo        Int             @unique
  nombre        String          @unique
  isActive      Boolean         @default(true)
  updatedAt     DateTime        @updatedAt
  createdAt     DateTime        @default(now())
  planesEstudio PlanDeEstudio[]
}

model PlanDeEstudio {
  id        String    @id @default(uuid())
  version   Int
  carreraId String
  materias  Materia[]
  carrera   Carrera   @relation(fields: [carreraId], references: [id])
  isActive  Boolean   @default(true)
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
}

model Materia {
  id                String         @id @default(uuid())
  sigla             String         @unique
  nombre            String
  creditos          Int
  esElectiva        Boolean        @default(false)
  isActive          Boolean        @default(true)
  nivelId           String
  nivel             Nivel          @relation(fields: [nivelId], references: [id])
  planDeEstudioId   String
  planDeEstudio     PlanDeEstudio  @relation(fields: [planDeEstudioId], references: [id])
  siglaMateria      Prerequisito[] @relation("MateriaRequiere")
  siglaPrerequisito Prerequisito[] @relation("EsRequisitoDe")
  updatedAt         DateTime       @updatedAt
  createdAt         DateTime       @default(now())
}

model Prerequisito {
  id                String  @id @default(uuid())
  siglaMateria      String  @map("siglaMateria")
  siglaPrerequisito String  @map("siglaPrerequisito")
  materia           Materia @relation("MateriaRequiere", fields: [siglaMateria], references: [id])
  prerequisito      Materia @relation("EsRequisitoDe", fields: [siglaPrerequisito], references: [id])

  isActive  Boolean  @default(true)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@unique([siglaMateria, siglaPrerequisito])
}

model MaestroDeOferta {
  id           String   @id @default(uuid())
  periodoId    String
  estudianteId String
  isActive     Boolean  @default(true)
  updatedAt    DateTime @updatedAt
  createdAt    DateTime @default(now())
}

model OfertaGrupoMateria {
  id                String   @id @default(uuid())
  grupoMateriaId    String
  maestroDeOfertaId String
  estaInscrita      Boolean  @default(false)
  isActive          Boolean  @default(true)
  updatedAt         DateTime @updatedAt
  createdAt         DateTime @default(now())

  @@unique([grupoMateriaId, maestroDeOfertaId])
}
